from pyairtable import Table
from config import AIRTABLE_API_KEY, AIRTABLE_BASE_ID, AIRTABLE_TABLE_NAME

class AirtableAPI:
    def __init__(self):
        """Initialisation de la connexion √† Airtable"""
        self.table = Table(AIRTABLE_API_KEY, AIRTABLE_BASE_ID, AIRTABLE_TABLE_NAME)

    def format_invoice_for_airtable(self, invoice):
        """Convertit une facture Sellsy au format Airtable"""
        # V√©rifications de s√©curit√© pour √©viter les erreurs si des champs sont manquants
        if not invoice:
            print("‚ö†Ô∏è Donn√©es de facture invalides ou vides")
            return None
            
        # R√©cup√©rer l'ID client de Sellsy avec gestion des cas o√π les champs sont manquants
        client_id = None
        client_name = ""
        
        if "relation" in invoice:
            if "id" in invoice["relation"]:
                client_id = str(invoice["relation"]["id"])
            if "name" in invoice["relation"]:
                client_name = invoice["relation"]["name"]
        
        # Cr√©er un dictionnaire avec des valeurs par d√©faut pour √©viter les erreurs
        return {
            "ID_Facture": str(invoice.get("id", "")),  # Conversion explicite en str
            "Num√©ro": invoice.get("reference", ""),
            "Date": invoice.get("created_at", ""),
            "Client": client_name,
            "ID_Client_Sellsy": client_id,  # Ajout de l'ID client Sellsy
            "Montant_HT": invoice.get("total_amount_without_taxes", 0),
            "Montant_TTC": invoice.get("total_amount_with_taxes", 0),
            "Statut": invoice.get("status", ""),
            "URL": f"https://go.sellsy.com/document/{invoice.get('id', '')}"
        }

    def find_invoice_by_id(self, sellsy_id):
        """Recherche une facture dans Airtable par son ID Sellsy"""
        if not sellsy_id:
            print("‚ö†Ô∏è ID Sellsy vide, impossible de rechercher la facture")
            return None
            
        sellsy_id = str(sellsy_id)  # S√©curit√© : conversion en cha√Æne
        formula = f"{{ID_Facture}}='{sellsy_id}'"
        print(f"üîç Recherche dans Airtable avec formule : {formula}")
        try:
            records = self.table.all(formula=formula)
            print(f"R√©sultat de recherche : {len(records)} enregistrement(s) trouv√©(s).")
            return records[0] if records else None
        except Exception as e:
            print(f"‚ùå Erreur lors de la recherche de la facture {sellsy_id} : {e}")
            return None

    def insert_or_update_invoice(self, invoice_data):
        """Ins√®re ou met √† jour une facture dans Airtable"""
        if not invoice_data:
            print("‚ùå Donn√©es de facture invalides, impossible d'ins√©rer/mettre √† jour")
            return None
            
        sellsy_id = str(invoice_data.get("ID_Facture", ""))
        if not sellsy_id:
            print("‚ùå ID Sellsy manquant dans les donn√©es, impossible d'ins√©rer/mettre √† jour")
            return None
            
        try:
            existing_record = self.find_invoice_by_id(sellsy_id)

            if existing_record:
                record_id = existing_record["id"]
                print(f"üîÅ Facture {sellsy_id} d√©j√† pr√©sente, mise √† jour en cours...")
                self.table.update(record_id, invoice_data)
                print(f"‚úÖ Facture {sellsy_id} mise √† jour avec succ√®s.")
                return record_id
            else:
                print(f"‚ûï Facture {sellsy_id} non trouv√©e, insertion en cours...")
                record = self.table.create(invoice_data)
                print(f"‚úÖ Facture {sellsy_id} ajout√©e avec succ√®s √† Airtable (ID: {record['id']}).")
                return record['id']
        except Exception as e:
            print(f"‚ùå Erreur lors de l'insertion/mise √† jour de la facture {sellsy_id}: {e}")
            # Afficher les cl√©s pour le d√©bogage
            print(f"Cl√©s dans les donn√©es: {list(invoice_data.keys())}")
            raise e

# Code principal pour synchroniser les factures Sellsy avec Airtable
def sync_invoices_to_airtable(sellsy_api_client):
    print("üöÄ D√©but de la synchronisation des factures Sellsy vers Airtable...")

    # R√©cup√®re toutes les factures depuis Sellsy
    invoices = sellsy_api_client.get_all_invoices()

    if invoices:
        print(f"üì¶ {len(invoices)} factures r√©cup√©r√©es depuis Sellsy.")
        airtable_api = AirtableAPI()

        # Parcours des factures r√©cup√©r√©es et insertion ou mise √† jour dans Airtable
        for invoice in invoices:
            formatted_invoice = airtable_api.format_invoice_for_airtable(invoice)
            if formatted_invoice:
                airtable_api.insert_or_update_invoice(formatted_invoice)

        print("‚úÖ Synchronisation termin√©e.")
    else:
        print("‚ö†Ô∏è Aucune facture r√©cup√©r√©e depuis Sellsy.")

# Ex√©cution directe (√† remplacer ou adapter selon ton client Sellsy)
if __name__ == "__main__":
    from sellsy_api import SellsyAPI  # Import your SellsyAPI class
    sellsy_api_client = SellsyAPI()
    sync_invoices_to_airtable(sellsy_api_client)
